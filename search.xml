<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>solidwork上手</title>
      <link href="/2023/06/27/20230627/"/>
      <url>/2023/06/27/20230627/</url>
      
        <content type="html"><![CDATA[<p>保存是一个好习惯，solidwork太容易什么地方错误操作，导致成果gg</p><p>双击滚轮，回归最初的视角。</p><p>按住滚轮，转动视角。</p><p>对一个面右键，选择图案（一个面，带有朝上的箭头），正视于这个面。</p><p>随便拿一个草图中的工具，画出随便一个封闭图形，选择菜单栏的 插入—台体，选择需要的厚度，就能形成对应形状的立体图形。</p><p>同理，在已有立体图形的面上，画封闭图形，插入—切除—拉伸，选择深度，切除出所需的。</p><p>若仅仅只要弧形，选择草图的样条曲线（图标是横着放的s）</p><p>装配</p><p>选择装配体—插入零部件，加入零件</p><p>点击配合，选择所需，进行配合，平行和重合稍微区分下，默认是重合</p><p>实际solid不考虑实际情况，例如，两个孔，一个面，会有两种情况，一个是正确的，另一种是两个板子重合在一起，这时需要适当旋转下零件。总之不对就慢慢调角度。</p><p>配合要求尺寸完全对的上的</p><p>，</p>]]></content>
      
      
      
        <tags>
            
            <tag> solidwork </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组相关的一些</title>
      <link href="/2023/05/28/20230522/"/>
      <url>/2023/05/28/20230522/</url>
      
        <content type="html"><![CDATA[<p>  太弱了，每次遇到数组都要查一遍，稍微写下，希望能加深下吧</p><hr><h5 id="一个数组题"><a href="#一个数组题" class="headerlink" title="一个数组题"></a>一个数组题</h5><p><a href="https://leetcode.cn/problems/difference-of-number-of-distinct-values-on-diagonals/description/">6440. 对角线上不同值的数量差</a> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">differenceOfDistinctValues</span>(<span class="params">self, grid: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        l=[]</span><br><span class="line">        r=[]</span><br><span class="line">        n=<span class="built_in">len</span>(grid)</span><br><span class="line">        m=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">        ans = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,m):</span><br><span class="line">                l=[]</span><br><span class="line">                r=[]</span><br><span class="line">                tempx=j-<span class="number">1</span></span><br><span class="line">                tempy=i-<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> tempx&gt;=<span class="number">0</span> <span class="keyword">and</span> tempy&gt;=<span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> grid[tempy][tempx] <span class="keyword">not</span> <span class="keyword">in</span> l:</span><br><span class="line">                        l.append(grid[tempy][tempx])</span><br><span class="line">                    tempx-=<span class="number">1</span></span><br><span class="line">                    tempy-=<span class="number">1</span></span><br><span class="line">                tempx=j+<span class="number">1</span></span><br><span class="line">                tempy=i+<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> tempx&lt;m <span class="keyword">and</span> tempy&lt;n:</span><br><span class="line">                    <span class="keyword">if</span> grid[tempy][tempx] <span class="keyword">not</span> <span class="keyword">in</span> r:</span><br><span class="line">                        r.append(grid[tempy][tempx])</span><br><span class="line">                    tempx+=<span class="number">1</span></span><br><span class="line">                    tempy+=<span class="number">1</span></span><br><span class="line">                ans[i][j]=<span class="built_in">abs</span>(<span class="built_in">len</span>(l)-<span class="built_in">len</span>(r))</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h5 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ans=[]</span><br><span class="line">ans1=[<span class="number">0</span>]*n    <span class="comment">##一维</span></span><br><span class="line">ans2=[[<span class="number">0</span>]*n]*n    <span class="comment">##虚假的二维，改动一个元素的值，实际会带动n个值得改变，浅拷贝</span></span><br><span class="line">ans3=[[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n)]  <span class="comment">##产生实际可用的二维，确定长度的数组</span></span><br></pre></td></tr></table></figure><h5 id="加入和删除"><a href="#加入和删除" class="headerlink" title="加入和删除"></a>加入和删除</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ans.append(<span class="string">&quot;add&quot;</span>)</span><br><span class="line"><span class="keyword">del</span> ans[n]   <span class="comment">##删去索引为n的元素</span></span><br></pre></td></tr></table></figure><h5 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ans.sort()  <span class="comment">##reverse = True 降序， reverse = False 升序（默认）</span></span><br><span class="line"><span class="comment">##可以利用lambda，自定义排序方式</span></span><br></pre></td></tr></table></figure><h5 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ans：</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(ans)):</span><br><span class="line"><span class="keyword">for</span> i,x <span class="keyword">in</span> <span class="built_in">enumerate</span>(ans):<span class="comment">##索引，元素</span></span><br><span class="line"><span class="comment">##二维</span></span><br><span class="line">n=<span class="built_in">len</span>(grid)</span><br><span class="line">m=<span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,n):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,m):</span><br></pre></td></tr></table></figure><h5 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;qqqqqqqqqqqqq&quot;</span><span class="comment">##字符串操作类似，但不能进行删改，需转化</span></span><br><span class="line">s1=<span class="built_in">list</span>(s)</span><br><span class="line">s2=<span class="string">&quot;&quot;</span>.join(s1)<span class="comment">##回到字符串</span></span><br></pre></td></tr></table></figure><h5 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ans[-<span class="number">1</span>]<span class="comment">##为数组最后一个元素</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opencv笔记</title>
      <link href="/2023/04/02/opencvnote/"/>
      <url>/2023/04/02/opencvnote/</url>
      
        <content type="html"><![CDATA[<p>安装cv库</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">pip</span> <span class="string">install</span> <span class="string">-i</span> <span class="string">https://pypi.tuna.tsinghua.edu.cn/simple</span> <span class="string">opencv-contrib-python</span></span><br></pre></td></tr></table></figure><p>一个简单的调用摄像头。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">video_demo</span>():</span><br><span class="line">    cap =cv2.VideoCapture(<span class="number">0</span>)<span class="comment">##0为调用摄像头，可改为一个视频目录</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ret,frame=cap.read()</span><br><span class="line">        frame=cv2.flip(frame,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> ret <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">            cv2.imshow(<span class="string">&quot;frame&quot;</span>,frame)</span><br><span class="line">            c=cv2.waitKey(<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> c==<span class="number">27</span>:<span class="comment">##按esc退出，强制结束进程会导致后面加入的保存的视频不可读</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">video_demo()</span><br></pre></td></tr></table></figure><p>将视频保存至本地</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def video_demo():</span><br><span class="line">    cap =cv2.VideoCapture(0)</span><br><span class="line"><span class="addition">+   w=cap.get(cv2.CAP_PROP_FRAME_WIDTH)</span></span><br><span class="line"><span class="addition">+   h=cap.get(cv2.CAP_PROP_FRAME_HEIGHT)</span></span><br><span class="line"><span class="addition">+   fps=cap.get(cv2.CAP_PROP_FPS)</span></span><br><span class="line"><span class="addition">+    out=cv2.VideoWriter(&quot;C:/Users/cyy/Desktop/opencv/lianxi/test.mp4&quot;,cv2.VideoWriter.fourcc(&#x27;P&#x27;,&#x27;I&#x27;,&#x27;M&#x27;,&#x27;1&#x27;),fps,(np.int(w),np.int(h)),True)##路径自己定义即可   </span></span><br><span class="line">.....</span><br><span class="line">     cv2.imshow(&quot;frame&quot;,frame)</span><br><span class="line"><span class="addition">+    out.write(frame)</span></span><br><span class="line">     c=cv2.waitKey(10)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vhdl</title>
      <link href="/2023/03/02/vhdl/"/>
      <url>/2023/03/02/vhdl/</url>
      
        <content type="html"><![CDATA[<p><del>做个备份，怕打了半天，又丢了</del></p><p>为了方便，均为小写，quartus版本为13.1</p><hr><h5 id="四位频率计"><a href="#四位频率计" class="headerlink" title="四位频率计"></a>四位频率计</h5><h6 id="3-8译码器"><a href="#3-8译码器" class="headerlink" title="3-8译码器"></a>3-8译码器</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> ieee;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_1164.<span class="keyword">all</span>;</span><br><span class="line"><span class="keyword">entity</span> decoder <span class="keyword">is</span></span><br><span class="line"><span class="keyword">Port</span>(aa:<span class="keyword">in</span> <span class="built_in">std_logic_vector</span>(<span class="number">2</span> <span class="keyword">downto</span> <span class="number">0</span>);</span><br><span class="line">qq:<span class="keyword">out</span> <span class="built_in">std_logic_vector</span>(<span class="number">7</span> <span class="keyword">downto</span> <span class="number">0</span>));</span><br><span class="line"><span class="keyword">end</span> decoder;</span><br><span class="line"><span class="keyword">architecture</span> one <span class="keyword">of</span> decoder <span class="keyword">is</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">process</span>(aa)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">case</span> aa <span class="keyword">is</span></span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;000&quot;</span>=&gt;qq&lt;=<span class="string">&quot;00000001&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;001&quot;</span>=&gt;qq&lt;=<span class="string">&quot;00000010&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;010&quot;</span>=&gt;qq&lt;=<span class="string">&quot;00000100&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;011&quot;</span>=&gt;qq&lt;=<span class="string">&quot;00001000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;100&quot;</span>=&gt;qq&lt;=<span class="string">&quot;00010000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;101&quot;</span>=&gt;qq&lt;=<span class="string">&quot;00100000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;110&quot;</span>=&gt;qq&lt;=<span class="string">&quot;01000000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="string">&quot;111&quot;</span>=&gt;qq&lt;=<span class="string">&quot;10000000&quot;</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">case</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span>;</span><br><span class="line"><span class="keyword">end</span> one;</span><br></pre></td></tr></table></figure><h6 id="十进制加法计数器"><a href="#十进制加法计数器" class="headerlink" title="十进制加法计数器"></a>十进制加法计数器</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> ieee;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_1164.<span class="keyword">all</span>;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_unsigned.<span class="keyword">all</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">entity</span> cnt10 <span class="keyword">is</span></span><br><span class="line"><span class="keyword">port</span>(clk: <span class="keyword">in</span> <span class="built_in">std_logic</span>;</span><br><span class="line">clr:<span class="keyword">in</span> <span class="built_in">std_logic</span>;</span><br><span class="line">cs:<span class="keyword">in</span> <span class="built_in">std_logic</span>;</span><br><span class="line">qq: <span class="keyword">buffer</span> <span class="built_in">std_logic_vector</span>(<span class="number">3</span> <span class="keyword">downto</span> <span class="number">0</span>);</span><br><span class="line">co:<span class="keyword">out</span> <span class="built_in">std_logic</span>);</span><br><span class="line"><span class="keyword">end</span> cnt10;</span><br><span class="line"><span class="keyword">architecture</span> one <span class="keyword">of</span> cnt10 <span class="keyword">is</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">process</span>(clk,clr,cs)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(clr=<span class="string">&#x27;1&#x27;</span>)<span class="keyword">then</span></span><br><span class="line">qq&lt;=<span class="string">&quot;0000&quot;</span>;</span><br><span class="line"><span class="keyword">elsif</span>(clk<span class="symbol">&#x27;event</span> <span class="keyword">and</span> clk=<span class="string">&#x27;1&#x27;</span>)<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> (cs=<span class="string">&#x27;1&#x27;</span>)<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span>(qq=<span class="number">9</span>)<span class="keyword">then</span></span><br><span class="line">qq&lt;=<span class="string">&quot;0000&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">qq&lt;=qq+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span>;</span><br><span class="line"><span class="keyword">process</span>(qq)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(qq=<span class="number">9</span>)<span class="keyword">then</span></span><br><span class="line">co&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">co&lt;=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span>;</span><br><span class="line"><span class="keyword">end</span> one;</span><br></pre></td></tr></table></figure><h6 id="锁存"><a href="#锁存" class="headerlink" title="锁存"></a>锁存</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> ieee;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_1164.<span class="keyword">all</span>;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_unsigned;</span><br><span class="line"></span><br><span class="line"><span class="keyword">entity</span> lock <span class="keyword">is</span></span><br><span class="line"><span class="keyword">port</span>(le : <span class="keyword">in</span> <span class="built_in">std_logic</span>;</span><br><span class="line">dd: <span class="keyword">in</span> <span class="built_in">std_logic_vector</span>(<span class="number">3</span> <span class="keyword">downto</span> <span class="number">0</span>);</span><br><span class="line">qq: <span class="keyword">out</span> <span class="built_in">std_logic_vector</span>(<span class="number">3</span> <span class="keyword">downto</span> <span class="number">0</span>));</span><br><span class="line"><span class="keyword">end</span> lock;</span><br><span class="line"><span class="keyword">architecture</span> one <span class="keyword">of</span> lock <span class="keyword">is</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">process</span>(le,dd)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(le=<span class="string">&#x27;1&#x27;</span>)<span class="keyword">then</span></span><br><span class="line">qq&lt;=dd;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span>;</span><br><span class="line"><span class="keyword">end</span> one;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="译码，LED显示"><a href="#译码，LED显示" class="headerlink" title="译码，LED显示"></a>译码，LED显示</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> ieee;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_1164.<span class="keyword">all</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">entity</span> decoder <span class="keyword">is</span></span><br><span class="line"><span class="keyword">Port</span>(din:<span class="keyword">in</span> <span class="built_in">std_logic_vector</span>(<span class="number">3</span> <span class="keyword">downto</span> <span class="number">0</span>);</span><br><span class="line">led7s:<span class="keyword">out</span> <span class="built_in">std_logic_vector</span>(<span class="number">6</span> <span class="keyword">downto</span> <span class="number">0</span>));</span><br><span class="line"><span class="keyword">end</span> decoder;</span><br><span class="line"><span class="keyword">architecture</span> one <span class="keyword">of</span> decoder <span class="keyword">is</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">process</span>(din)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">case</span> din <span class="keyword">is</span></span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0000&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;1000000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0001&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;1111001&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0010&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0100100&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0011&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0110000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0100&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0011001&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0101&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0010010&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0110&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0000010&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;0111&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;1111000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1000&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0000000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1001&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0010000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1010&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0001000&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1011&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0000011&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1100&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;1000110&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1101&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0100001&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1110&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0000110&quot;</span>;</span><br><span class="line"><span class="keyword">when</span><span class="string">&quot;1111&quot;</span>=&gt;led7s&lt;=<span class="string">&quot;0001110&quot;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">others</span>=&gt;led7s&lt;=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">case</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>LED存在共阴共阳问题，若显示不对，取相反即可</p><p>若仍然不对，校对引脚，<del>还是不行的话，看着改译码信号，能亮了肯定有对应信号让它亮</del></p><h6 id="四位频率计的control模块"><a href="#四位频率计的control模块" class="headerlink" title="四位频率计的control模块"></a>四位频率计的control模块</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span> ieee;</span><br><span class="line"><span class="keyword">use</span> ieee.std_logic_1164.<span class="keyword">all</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">entity</span> control <span class="keyword">is</span></span><br><span class="line"><span class="keyword">port</span>(clk: <span class="keyword">in</span> <span class="built_in">std_logic</span>;</span><br><span class="line">cs,clr,le: <span class="keyword">out</span> <span class="built_in">std_logic</span>);</span><br><span class="line"><span class="keyword">end</span> control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">architecture</span> behav <span class="keyword">of</span> control <span class="keyword">is</span></span><br><span class="line"><span class="keyword">signal</span> current_state,next_state:<span class="built_in">std_logic_vector</span>(<span class="number">3</span> <span class="keyword">downto</span> <span class="number">0</span>);</span><br><span class="line"><span class="keyword">constant</span> st0: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;0011&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st1: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;0010&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st2: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;0110&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st3: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;0111&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st4: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;0101&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st5: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;0100&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st6: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;1100&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st7: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;1101&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st8: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;1111&quot;</span>;</span><br><span class="line"><span class="keyword">constant</span> st9: <span class="built_in">std_logic_vector</span>:=<span class="string">&quot;1110&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">com1:<span class="keyword">process</span>(current_state)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">case</span> current_state <span class="keyword">is</span></span><br><span class="line"><span class="keyword">when</span> st0=&gt;next_state&lt;=st1;clr&lt;=<span class="string">&#x27;1&#x27;</span>;cs&lt;=<span class="string">&#x27;0&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st1=&gt;next_state&lt;=st2;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st2=&gt;next_state&lt;=st3;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st3=&gt;next_state&lt;=st4;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st4=&gt;next_state&lt;=st5;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st5=&gt;next_state&lt;=st6;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st6=&gt;next_state&lt;=st7;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st7=&gt;next_state&lt;=st8;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st8=&gt;next_state&lt;=st9;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;1&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> st9=&gt;next_state&lt;=st0;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;0&#x27;</span>;le&lt;=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">others</span>=&gt;next_state&lt;=st0;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;0&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">case</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span> com1;</span><br><span class="line"></span><br><span class="line">reg:<span class="keyword">process</span>(clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(clk<span class="symbol">&#x27;event</span> <span class="keyword">and</span> clk=<span class="string">&#x27;1&#x27;</span>)<span class="keyword">then</span></span><br><span class="line">current_state&lt;=next_state;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">process</span> reg;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>虽然在同一条里，clr，cs，le并不是同时变化的，竞争冒险<br>实际中，le锁存信号还为1时，clr清零信号为1，现实为绝大部分时间为0，LED只有在le那段时间显示实际数字</p><p>解决方法：加个三个都为0的状态即可</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">when</span> st0=&gt;next_state&lt;=st1;clr&lt;=<span class="string">&#x27;1&#x27;</span>;cs&lt;=<span class="string">&#x27;0&#x27;</span>;le&lt;=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">.....</span><br><span class="line"><span class="keyword">when</span> st9=&gt;next_state&lt;=st0;clr&lt;=<span class="string">&#x27;0&#x27;</span>;cs&lt;=<span class="string">&#x27;0&#x27;</span>;le&lt;=<span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vhdl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何点亮一枚stm32教程</title>
      <link href="/2023/02/25/stm32f103c8t6/"/>
      <url>/2023/02/25/stm32f103c8t6/</url>
      
        <content type="html"><![CDATA[<p>  没想到是电机驱动烧了，浪费了太多时间了，金属车身结实，也比一众的塑料车身好看，但没做好绝缘，直接寄了-.-,浪费了大半天，啥寻迹，转弯都没搞过，还好换了个电机驱动，证明我的Ctrl+cv技术还是挺不错的，所以不要过于主观臆断，蹭记忆还有点，水篇文章（雾，更多的是为了起个存档作用。——2023.2.25</p><hr><h5 id="JLINK接口"><a href="#JLINK接口" class="headerlink" title="JLINK接口"></a>JLINK接口</h5><p>  首先就是两边的VCC和GND要对应上。然后看概率随便接doge，烧不进去再改下。顺序一般是对上的。</p><p>  TMS—-DIO(数据线)   SCLK—-DCL(时钟线)</p><hr><h5 id="电机驱动L298N"><a href="#电机驱动L298N" class="headerlink" title="电机驱动L298N"></a>电机驱动L298N</h5><table><thead><tr><th>+5v</th><th>GND</th><th>+12v</th><th>ENA</th><th>IN1~IN4</th><th>ENB</th></tr></thead></table><p>  把跳线拔了,以左轮为例：</p><table><thead><tr><th>IN1</th><th>IN2</th><th>ENA</th><th>OUT1、OUT2连电机</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>x</td><td>停转</td></tr><tr><td>1</td><td>1</td><td>x</td><td>停转</td></tr><tr><td>1</td><td>0</td><td>pwm</td><td>正转调速</td></tr><tr><td>0</td><td>1</td><td>pwm</td><td>反转调速</td></tr><tr><td>1</td><td>0</td><td>1</td><td>正转全速</td></tr><tr><td>0</td><td>1</td><td>1</td><td>反转全速</td></tr></tbody></table><p>右轮同理</p><p>可见，INx(x为数字。为逻辑输入，控制转动方向)，ENA和ENB（使能端）起到控制速度的作用。</p><p>pwm输出控制的驱动为</p><p>in1 speed in2 0   正</p><p>OR       </p><p>in1  -seeed in2 0 反。——驱动又烧了QAQ ，真的猛啊，连火都出来了。于2023.4.26  </p><hr><h5 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h5><p>CPIO默认是关闭的，为了节能(?)，GPIOA就是指，板子上为A的引脚，GPIO_Pin_x（x为数字），板子上为x的引脚，所以要和上面一行共同确定某个引脚</p><p>PWM设置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//开启定时器和GPIO口</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置使能A0和B1为使能</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置TIM定时器</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line"></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Prescaler =<span class="number">17</span>;                    </span><br><span class="line">    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; </span><br><span class="line">    TIM_TimeBaseStructure.TIM_Period = <span class="number">999</span>;                     </span><br><span class="line">    TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>;   </span><br><span class="line">TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseStructure);</span><br><span class="line">    TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; </span><br><span class="line">    TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;        </span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; </span><br><span class="line"></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC1PreloadConfig(TIM2,TIM_OCPreload_Enable);</span><br><span class="line"></span><br><span class="line">TIM_OC3Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC3PreloadConfig(TIM2,TIM_OCPreload_Enable);</span><br><span class="line"></span><br><span class="line"> TIM_ARRPreloadConfig(TIM2,ENABLE);</span><br><span class="line"> TIM_Cmd(TIM2, ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>逻辑输入初始化(INx)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">PWM_Init();</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>具体转动代码//A4、A5、B6、B7为逻辑输入</p><p>GPIO_SetBits   拉高引脚输出电平，GPIO_ResetBits 拉低引脚输出电平</p><p>TIM_SetCompare1这个函数名中的数字1代表的是TIMx的通道1,TIMx中的x可以取1到17且除了6、7的数</p><p>函数TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)的调用时，前一项参数为TIMx,TIMx中的x可以取1到17且除了6、7的数,Compare1是用于与TIMx比较的数，相当于用TIMx的一个周期的时间减去这个Compare1，使得TIMx的周期从后面开始的Compare1的时间为TIMx的前部分时间的反向。即若前部分时间为高电平，则Compare1段所在时间为低电平。若前部分时间为低电平，则Compare1段所在时间为高电平</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">SpeedConturl</span><span class="params">(<span class="type">int</span> left_speed , <span class="type">int</span> right_speed)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//可以加个限速</span></span><br><span class="line"><span class="keyword">if</span>(right_speed &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOB, GPIO_Pin_7);</span><br><span class="line">GPIO_SetBits(GPIOB, GPIO_Pin_6);</span><br><span class="line">TIM_SetCompare2(TIM2,right_speed);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOB, GPIO_Pin_7);</span><br><span class="line">GPIO_ResetBits(GPIOB, GPIO_Pin_6);</span><br><span class="line">TIM_SetCompare2(TIM2,-right_speed);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(left_speed &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_5);</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_4);</span><br><span class="line">TIM_SetCompare1(TIM2,left_speed);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_5);</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_4);</span><br><span class="line">TIM_SetCompare1(TIM2,-left_speed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h5 id="Last"><a href="#Last" class="headerlink" title="Last"></a>Last</h5><p>keil每个最后要留空一行</p>]]></content>
      
      
      
        <tags>
            
            <tag> stm32，car </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遇到的坑&amp;目前的计划</title>
      <link href="/2023/01/29/20230129/"/>
      <url>/2023/01/29/20230129/</url>
      
        <content type="html"><![CDATA[<p>   寒假高强度刷b站，无意间看到GitHub page（其实也早就看到过，但当时摆烂沉迷游戏hhhh），就开始一步步跟着走，差不多大半个月，对网站的最多了解可能也就是个做了爬微博吧，可能我完全跟着可能还要快hhhh，挺上头的。。。大体上就完了，自我感觉不错，<del>也有种期末考试要寄的感觉哈哈</del>。准备考试去喽            —2023.1.29</p><hr><h4 id="印象深刻的坑"><a href="#印象深刻的坑" class="headerlink" title="印象深刻的坑"></a>印象深刻的坑</h4><p>  反正首先就是缺什么装什么，前面有没hexo-都试下，npm没反应，还得是cnpm。</p><p>  root的_config.yml里的example.com感觉放着就好，前面还在GitHub page的时候，改了下，也不知道我后面动了什么，只剩下文字。</p><p>  写了description没起作用，在这里:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br></pre></td></tr></table></figure><p>  一图流或许直接改transparent更好(?)把别人的css文件搬过来完完全全就直接是没了(?)背景颜色浅点看不见字，反而是主题的_config.yml更改，会有颜色深点的部分。还是得慢慢学起来wwww。</p><p>  傻逼edge，天天删我下载的，设置关了还删(实在找不到和下载的有关了QAQ)</p><hr><h4 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h4><p>打算把网页做得简单些，所以后续可能不加太多东西了（懒（人总会是变吧</p><p>  试图把上一篇和下一遍的背景去掉，想摆就随便扔图了，想把下面这代码注释了，现实是没什么用，还是再学点东西再魔改吧（</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">if</span> <span class="string">next.cover_type</span> <span class="string">===</span> <span class="string">&#x27;img&#x27;</span></span><br><span class="line">            <span class="string">img.cover(src=url_for(next.cover)</span> <span class="string">onerror=`onerror=null;src=&#x27;$&#123;url_for(theme.error_img.post_page)&#125;&#x27;`</span> <span class="string">alt=&#x27;cover</span> <span class="string">of</span> <span class="string">next</span> <span class="string">post&#x27;)</span></span><br><span class="line">            <span class="string">else</span></span><br><span class="line">            <span class="string">.cover(style=`background:</span> <span class="string">$&#123;next.cover</span> <span class="string">||</span> <span class="string">&#x27;var(--default-bg-color)&#x27;</span><span class="string">&#125;`)</span></span><br></pre></td></tr></table></figure><p>  在about写点东西吧</p><p>  当作记录，当然也希望能够扔点自己满意的东西上来吧</p><p>  搞个图床（看情况吧，现在打算还是偏向于文字，</p><hr><h4 id="大致就是这样了"><a href="#大致就是这样了" class="headerlink" title="大致就是这样了"></a>大致就是这样了</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名get</title>
      <link href="/2023/01/27/20230127/"/>
      <url>/2023/01/27/20230127/</url>
      
        <content type="html"><![CDATA[<p>1那<span id="more"></span>现在就是<br>1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ydduuccuuf.github.io</span><br><span class="line">flow127.cn</span><br></pre></td></tr></table></figure><p>就把今天日期放在域名上吧qwq（</p>]]></content>
      
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2023/01/16/test/"/>
      <url>/2023/01/16/test/</url>
      
        <content type="html"><![CDATA[<p>又是一个Hello World<br>草了</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
